package subsystem.elevator;

import subsystem.CommunicationPipe;
import util.Sleeper;

public class Elevator implements Runnable {
	private CommunicationPipe pipe;
	private boolean isMoving;

	public Elevator(CommunicationPipe pipe) {
		this.pipe = pipe;
		this.isMoving = false;
	}

	@Override
	public void run() {
		while (true) {
			if (pipe.isPromptElevator()) {
				handleElevatorEvent();
			} else if (isMoving) {
				handleMove();
			}
			Sleeper.sleep(500); 
		}
	}

	private void handleElevatorEvent() {
		/**
		 * TODO if the elevator is not moving, update the motor to go in the corresponding direction otherwise process the stop generated by the scheduler
		 */
		System.out.println(Thread.currentThread().getName() + " has received the signal and is currently moving.");
		pipe.setElevatorPrompt(false);
		isMoving = true;
	}

	private void handleMove() {
		/*
		 * TODO Once the elevator starts moving, it must update the lamps to the scheduler which will then notify the the floor subsystem
		 */
		System.out.println(Thread.currentThread().getName() + " has signaled the lamps to the Scheduler.");
		pipe.elevatorToFloor();
		isMoving = false;
	}

}
